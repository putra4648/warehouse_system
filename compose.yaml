services:
  wms_db:
    container_name: wms_db
    image: postgres:17
    ports:
      - 8000:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=wms_db
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3.0
    ports:
      - 9000:8080
    environment:
      # - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      # - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_LOG_LEVEL=info
      - KC_HTTP_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://wms_db:5432/wms_keycloak
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin123
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
      - ./config/server.keystore:/opt/keycloak/server.keystore
    command:
      [
        "start",
        "--import-realm",
        "--https-key-store-file=/opt/keycloak/server.keystore",
        "--https-key-store-password=password",
        "--hostname=localhost",
      ]
    networks:
      - wms-network
    depends_on:
      wms_db:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://keycloak:8080/health/ready || exit 1"]
    #   interval: 15s
    #   timeout: 10s
    #   retries: 30

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./config/datasources:/etc/grafana/provisioning/datasources
    networks:
      - wms-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - wms-network

  # app:
  #   depends_on:
  #     wms_db:
  #       condition: service_healthy
  #     # keycloak:
  #     #   condition: service_healthy
  #   build:
  #     context: .
  #   container_name: app
  #   ports:
  #     - 7000:7000
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://wms_db:5432/wms_db
  #     - SPRING_DATASOURCE_USERNAME=admin
  #     - SPRING_DATASOURCE_PASSWORD=admin123
  #     - spring.security.oauth2.client.provider.wms-provider.issuer_uri=http://localhost:9000/realms/wms
  #   networks:
  #     - wms-network

networks:
  wms-network:
    driver: bridge
