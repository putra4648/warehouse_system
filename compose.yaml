services:
  wms_db:
    container_name: wms_db
    image: postgres:17
    ports:
      - 8000:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=wms_db
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: wms-keycloak
    build:
      context: docker/keycloak
    ports:
      - 9000:8080
    environment:
      - KC_DB_URL=jdbc:postgresql://wms_db:5432/wms_keycloak
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin123
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME=${KC_HOSTNAME:-localhost}
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
      - ./config/server.keystore:/opt/keycloak/server.keystore
    command:
      [
        "start",
        "--optimized",
        "--import-realm",
        "--https-key-store-file=/opt/keycloak/server.keystore",
        "--https-key-store-password=password",
      ]
    networks:
      - wms-network
    depends_on:
      wms_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://keycloak:8080/health/ready || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 30
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - wms-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.1
    container_name: logstash
    ports:
      - 5000:5000
      - 9600:9600
    volumes:
      - ./config/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./config/elk/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/elk/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    networks:
      - wms-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600/_node/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - wms-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    depends_on:
      wms_db:
        condition: service_healthy
      logstash:
        condition: service_healthy
      # keycloak:
      #   condition: service_healthy
    build:
      context: .
    container_name: app
    ports:
      - 7000:7000
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://wms_db:5432/wms_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      - spring.security.oauth2.client.provider.wms-provider.issuer_uri=http://keycloak:8080/realms/wms
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    networks:
      - wms-network

  web:
    build:
      context: ./web
    container_name: wms-web
    ports:
      - 3001:3000
    networks:
      - wms-network
    depends_on:
      - app

networks:
  wms-network:
    driver: bridge
