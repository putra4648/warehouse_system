services:
  wms_db:
    container_name: wms_db
    image: postgres:17
    ports:
      - 8000:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=wms_keycloak,wms_db
    volumes:
      - ./postgres-multiple-db.sh:/docker-entrypoint-initdb.d/postgres-multiple-db.sh
    networks:
      - wms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.2
    ports:
      - 9000:8080
    environment:
      # - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      # - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_LOG_LEVEL=info
      - KC_HTTP_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://wms_db:5432/wms_keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: ["start-dev", "--import-realm", "--http-port=8080"]
    networks:
      - wms-network
    depends_on:
      wms_db:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
  app:
    depends_on:
      wms_db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    build:
      context: .
    container_name: app
    ports:
      - 7000:7000
    environment:
      - DB_URL=jdbc:postgresql://wms_db:5432/wms_db
      - WMS_PROVIDER_URI=http://keycloak:8080/realms/wms
    networks:
      - wms-network

networks:
  wms-network:
    driver: bridge
